buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

configurations {
    shade
}

shadowJar {
    classifier = null
    configurations = [project.configurations.shade]
    relocate 'tamaized.regutil', 'tamaized.voidscape.regutil'
}

repositories {
    maven {
        url = "https://dvs1.progwml6.com/files/maven/" // JEI
    }
    maven {
        url = 'https://maven.tamaized.com/releases/' // RegUtil
    }
}

version = "${artifactor_minecraft_version}-${artifactor_mod_version}." + (hasProperty("CIVersion") ? CIVersion : mod_version)
group = "tamaized.voidscape"
archivesBaseName = "Voidscape"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings("${project.mapping_type}", "${project.mapping_version}")
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                voidscape {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                voidscape {
                    source sourceSets.main
                }
            }
        }
    }
}

processResources {
    filesMatching("META-INF/mods.toml") {
        expand([
                'version': "${project.version}"
        ])
    }
}

jar {
    //noinspection GroovyAssignabilityCheck
    manifest {
        attributes(["Specification-Title"     : "Voidscape",
                    "Specification-Vendor"    : "Tamaized",
                    "Specification-Version"   : "${version}",
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : "${version}",
                    "Implementation-Vendor"   : "Tamaized",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.artifactor_minecraft_version}-${project.artifactor_forge_version}"

//    runtimeOnly fg.deobf("mezz.jei:${project.jei_version}")
    def reg = "tamaized:regutil:" + project.regutil_version
    implementation fg.deobf(reg)
    shade reg
}

def secrets = new Properties()
def secretsFile = file('secrets.properties');
if (secretsFile.exists()) {
    secretsFile.withInputStream {
        stream -> secrets.load(stream)
    }

    fileTree("secrets").matching {
        include "**/*.properties"
    }.each {
        File file ->
            file.withInputStream {
                stream -> secrets.load(stream)
            }
    }
}

jar.finalizedBy('reobfJar')

def mavenUser = hasProperty("CIMUser") ? CIMUser : secrets.getProperty("maven_username")
def mavenToken = hasProperty("CIMToken") ? CIMToken : secrets.getProperty("maven_password")

publishing {
    publications {
        mavenJava(MavenPublication) {
            afterEvaluate {
                artifact project.jar
                artifact project.sourceJar
            }
            setGroupId 'tamaized'
            setArtifactId 'voidscape'
        }
    }
    repositories {
        maven {
            url "https://maven.tamaized.com/releases"
            credentials {
                username mavenUser
                password mavenToken
            }
        }
    }
}

task sourceJar(type: Jar, dependsOn: 'classes') {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task incrBuildNum doLast {
    ant.propertyfile(file: "gradle.properties") {
        entry(key: "mod_version", value: Integer.parseInt(project.mod_version) + 1)
    }
}

reobf {
    shadowJar {}
}

build.dependsOn shadowJar
build.dependsOn reobfShadowJar

build.finalizedBy(incrBuildNum)
